<template>
  <div class="wrapper">
    <div class="footer">
      <div
        for="item in tabbarArr"
        class="footer-item"
        @click="onTabClick(item.taskState)"
        style="backgroundColor: {{state === item.taskState ? '#0099ff' : '#fff'}};"
      >
        <image src="{{item.imgSrc}}" alt="{{item.imgAlt}}" class="item-img" />
        <text style="color: {{state === item.taskState ? 'white' : 'black'}};">
          {{ item.text }}
        </text>
      </div>
    </div>
  </div>
</template>

<script>
import { mapState, Component } from 'qa-vuex'
import { TASK_STATES } from '../helper/const'

const tabbarArr = [
  {
    imgSrc: '/assets/images/all.png',
    imgAlt: "全部任务",
    text: "全部",
    taskState: TASK_STATES.all,
  },
  {
    imgSrc: '/assets/images/completed.png',
    imgAlt: "已完成任务",
    text: "已完成",
    taskState: TASK_STATES.completed,
  },
  {
    imgSrc: '/assets/images/todo.png',
    imgAlt: "未完成任务",
    text: "未完成",
    taskState: TASK_STATES.todo,
  },
  {
    imgSrc: '/assets/images/remove.png',
    imgAlt: "删除已完成",
    text: "清除",
    taskState: TASK_STATES.delete,
  },
]

export default Component({
  data() {
    return {
      // 冻结不变数组，使得只读，vuex 中便不再监听，以提升效率。
      tabbarArr: Object.freeze(tabbarArr),
      state: TASK_STATES.all
    }
  },

  computed: {
    ...mapState([
      "tasksArr",
    ])
  },

  onInit() { },

  onTabClick(tab) {
    if (tab == TASK_STATES.delete) {
      this.deleteCompletedTasks();
    } else {
      this.toggleCurrentTaskState(tab);
    }
  },

  toggleCurrentTaskState(newState) {
    this.state = newState
    this.$store.commit('updateCurrentTaskState', newState)
  },

  deleteCompletedTasks() {
    $utils.showPrompt('确定删除所有已完成任务吗').then((res) => {
      if (res.data.index == 0) {
        this.$store.commit('updateTasksArr', this.tasksArr.filter((task) => task.incomplete))
        $utils.showToast('已经删除所有已完成任务')
      }
    })
  }
})
</script>

<style lang="less">
@import './../assets/styles/style.less';

.wrapper {
  width: 100%;
  height: 100%;
  background-color: @white;
  border-top: 1px solid @grey;
  .footer {
    width: 100%;
    height: 100%;
    justify-content: center;
    .footer-item {
      height: 100%;
      width: 40 * @size-factor;
      .flex-box-mixins;
      .item-img {
        width: 10 * @size-factor;
        margin-bottom: @size-factor;
      }
      text {
        font-size: 5 * @size-factor;
      }
    }
  }
}
</style>
